---
import { RepologyService, type Package } from '../services/repologyService';

// List of projects to check
const projects = [
    "pdi",
    "deisa",
    "chameleon",
    "python:dask",
    "python:distributed",
    "python:ray",
    "python:transformers",
    "python:accelerate"
];

// List of repositories we're interested in
const targetRepos = ["pypi", "gnuguix", "spack", "nix_unstable"];

// Initialize the Repology service with caching and rate limiting
const repologyService = new RepologyService();

// Clean up expired cache entries on page load
await repologyService.cleanupExpiredCache();

// Fetch data for all projects using the service
const projectData = await repologyService.fetchMultipleProjects(projects);

// Helper function to get version for a specific repo
function getVersionForRepo(packages: Package[], repo: string): string | undefined {
  const repoPackage = packages.find(pkg => pkg.repo === repo);
  return repoPackage ? repoPackage.version : undefined;
}

// Helper function to get status color
function getStatusColor(status?: string): string {
  switch (status) {
    case "newest": return "text-green-600";
    case "outdated": return "text-yellow-600";
    case "legacy": return "text-red-600";
    default: return "text-gray-600";
  }
}

// Helper function to get package status for a repo
function getPackageStatus(packages: Package[], repo: string): string | undefined {
  const repoPackage = packages.find(pkg => pkg.repo === repo);
  return repoPackage ? repoPackage.status : undefined;
}
---

<div class="container mx-auto p-6">
  <h1 class="text-3xl font-bold text-gray-900 mb-4 text-center">
    Package Version Tracker
  </h1>
  
  <div class="text-center mb-6 text-sm text-gray-600">
    Data is cached for 12 hours â€¢ Rate limited to 1 request/second
  </div>

  <div class="bg-white rounded-lg shadow-lg overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Package
            </th>
            {targetRepos.map(repo => (
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                {repo}
              </th>
            ))}
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {projectData.map(({ project, packages }: { project: string; packages: Package[] }) => (
            <tr class="hover:bg-gray-50 transition-colors">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">
                  {project}
                </div>
                <div class="text-sm text-gray-500">
                  {packages.find((p: Package) => targetRepos.includes(p.repo))?.summary?.substring(0, 80) + '...' || 'Python package'}
                </div>
              </td>
              {targetRepos.map(repo => {
                const version = getVersionForRepo(packages, repo);
                const status = getPackageStatus(packages, repo);
                return (
                  <td class="px-6 py-4 whitespace-nowrap">
                    {version ? (
                      <div class="flex flex-col">
                        <span class="text-sm font-semibold text-gray-900">
                          {version}
                        </span>
                        <span class={`text-xs font-medium ${getStatusColor(status)}`}>
                          {status}
                        </span>
                      </div>
                    ) : (
                      <span class="text-sm text-gray-400 italic">
                        Not available
                      </span>
                    )}
                  </td>
                );
              })}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>

  <div class="mt-8 text-center">
    <div class="inline-flex items-center space-x-6 text-sm">
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-green-500 rounded-full"></div>
        <span class="text-gray-600">Newest</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
        <span class="text-gray-600">Outdated</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-red-500 rounded-full"></div>
        <span class="text-gray-600">Legacy</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-gray-400 rounded-full"></div>
        <span class="text-gray-600">Other/Unknown</span>
      </div>
    </div>
  </div>

  <div class="mt-6 text-center text-sm text-gray-500">
    Data provided by <a href="https://repology.org" class="text-blue-600 hover:text-blue-800 underline">Repology</a>
  </div>
</div>
