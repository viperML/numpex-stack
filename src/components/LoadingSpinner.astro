---
interface Props {
  title?: string;
  description?: string;
  showProgress?: boolean;
  size?: 'sm' | 'md' | 'lg';
}

const { 
  title = "Loading...", 
  description = "Please wait while we fetch the data.",
  showProgress = false,
  size = 'md'
} = Astro.props;

const spinnerSizes = {
  sm: 'w-8 h-8',
  md: 'w-16 h-16',
  lg: 'w-24 h-24'
};

const titleSizes = {
  sm: 'text-lg',
  md: 'text-2xl',
  lg: 'text-3xl'
};
---

<div class="container mx-auto p-6">
  <h1 class="text-3xl font-bold text-gray-900 mb-4 text-center">
    Package Version Tracker
  </h1>
  
  <div class="text-center mb-6 text-sm text-gray-600">
    Data is cached for 12 hours â€¢ Rate limited to 1 request/second
  </div>

  <div class="flex flex-col items-center justify-center min-h-[400px] bg-white rounded-lg shadow-lg p-8">
    <!-- Loading spinner -->
    <div class="relative mb-6">
      <div class={`${spinnerSizes[size]} border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin`}></div>
    </div>
    
    <!-- Loading text -->
    <h2 class={`${titleSizes[size]} font-semibold text-gray-700 mb-2`}>{title}</h2>
    <p class="text-gray-500 text-center max-w-md">
      {description}
    </p>
    
    <!-- Progress indicators -->
    {showProgress && (
      <div class="mt-8 w-full max-w-md">
        <div class="flex justify-between text-sm text-gray-600 mb-2">
          <span>Progress</span>
          <span class="loading-percentage">0%</span>
        </div>
        <div class="w-full bg-gray-200 rounded-full h-2">
          <div class="bg-blue-600 h-2 rounded-full animate-pulse loading-bar" style="width: 0%"></div>
        </div>
      </div>
    )}
  </div>

  <div class="mt-8 text-center">
    <div class="inline-flex items-center space-x-6 text-sm">
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-green-500 rounded-full"></div>
        <span class="text-gray-600">Newest</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
        <span class="text-gray-600">Outdated</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-red-500 rounded-full"></div>
        <span class="text-gray-600">Legacy</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-3 h-3 bg-gray-400 rounded-full"></div>
        <span class="text-gray-600">Other/Unknown</span>
      </div>
    </div>
  </div>

  <div class="mt-6 text-center text-sm text-gray-500">
    Data provided by <a href="https://repology.org" class="text-blue-600 hover:text-blue-800 underline">Repology</a>
  </div>
</div>

<script>
  // Simulate loading progress for better UX
  document.addEventListener('DOMContentLoaded', () => {
    const percentage = document.querySelector('.loading-percentage');
    const bar = document.querySelector('.loading-bar');
    
    if (percentage && bar) {
      let progress = 0;
      const interval = setInterval(() => {
        progress = Math.min(progress + Math.random() * 15, 95);
        percentage.textContent = `${Math.round(progress)}%`;
        (bar as HTMLElement).style.width = `${progress}%`;
        
        if (progress >= 95) {
          clearInterval(interval);
        }
      }, 200);
    }
  });
</script>

<style>
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
</style>